#pragma checksum "C:\Users\17876\Documents\Workplace\Projects\BillysWebsite\BillysWebsite\Views\Schedule\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "570ceaee79d2a238f6bc3b66a2c9cb4dad4d1138"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Schedule_Index), @"mvc.1.0.view", @"/Views/Schedule/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\17876\Documents\Workplace\Projects\BillysWebsite\BillysWebsite\Views\_ViewImports.cshtml"
using BillysWebsite;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\17876\Documents\Workplace\Projects\BillysWebsite\BillysWebsite\Views\_ViewImports.cshtml"
using BillysWebsite.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"570ceaee79d2a238f6bc3b66a2c9cb4dad4d1138", @"/Views/Schedule/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"384881fa6613b51c696908e9f10ab446d17ab6fa", @"/Views/_ViewImports.cshtml")]
    public class Views_Schedule_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\17876\Documents\Workplace\Projects\BillysWebsite\BillysWebsite\Views\Schedule\Index.cshtml"
  
    ViewData["Title"] = "Index";
    

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1 class=""jumbotron"">Schedule</h1>
<div class=""container"">
    <p class=""well cl-lg-12 cl-md-12 cl-sm-12 cl-xs-12"">
        Click on any date that is available to reserve a meeting with the tattoo artist.
    </p>
</div>
<div id='calendar'>
</div>
<script>
    var morningString = 'T10:00:00';
    var afternoonString = 'T15:00:00';
    var businessDays = [0, 3, 4, 5, 6];
    var today = new Date();
    today.setHours(0, 0, 0, 0);

    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;

        return [year, month, day].join('-');
    }

    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
           ");
            WriteLiteral(@" initialView: 'dayGridMonth',
            themeSystem: 'bootstrap',
            selectable: true,
            businessHours: {
                // days of week. an array of zero-based day of week integers (0=Sunday)
                daysOfWeek: businessDays, // Thursday - Sunday
                startTime: '10:00', // a start time (10am in this example)
                endTime: '19:00', // an end time (7pm in this example)
            },
            select: function (arg) {

                var businessHours = businessDays.includes(arg.start.getDay());
                var dateIsInPast = arg.start <= today;
                if (dateIsInPast) {
                    alert(""Please choose a date after "" + today);
                    calendar.unselect();
                    return;
                }
                if (!businessHours) {
                    alert(""The chosen date is not in the tattoo artist's business hours."");
                    calendar.unselect();
                    return;
   ");
            WriteLiteral("             }\r\n                if (businessHours && !dateIsInPast) {\r\n                    window.open(\'");
#nullable restore
#line 66 "C:\Users\17876\Documents\Workplace\Projects\BillysWebsite\BillysWebsite\Views\Schedule\Index.cshtml"
                            Write(Url.Action("MakeAppointment", "Schedule"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '?date=' + formatDate(arg.start));
                    //var title = prompt('Event Title:');
                    //if (title) {
                    //    var time = prompt('Morning or afternoon session?');
                    //    if (time == 'Morning') {
                    //        calendar.addEvent({
                    //            title: title,
                    //            start: arg.startStr + morningString,
                    //            end: arg.end
                    //        });
                    //    }
                    //    else {
                    //        calendar.addEvent({
                    //            title: title,
                    //            start: arg.startStr + afternoonString,
                    //            end: arg.end
                    //        });
                    //    }
                    //}
                }
                calendar.unselect();
            },
            dateClick: function (info) {
              ");
            WriteLiteral(@"  //more info on click event: https://fullcalendar.io/docs/dateClick
                info.jsEvent.preventDefault();
                //alert('Clicked on: ' + info.dateStr);
                //alert('Coordinates: ' + info.jsEvent.pageX + ',' + info.jsEvent.pageY);
                //alert('Current view: ' + info.view.type);
                // change the day's background color just for fun
                //info.dayEl.style.backgroundColor = 'red';
            },
            events: [
                //more info on events: https://fullcalendar.io/docs/event-model
                //{ // this object will be ""parsed"" into an Event Object
                //    title: 'The Title', // a property!
                //    start: '2020-07-15T10:30:00',
                //    end: '2020-07-15T11:30:00',
                //},
                //{ // this object will be ""parsed"" into an Event Object
                //    title: 'The Title', // a property!
                //    start: '2020-07-15T12:30:00',
      ");
            WriteLiteral(@"          //    end: '2020-07-15T13:30:00',
                //},
                //{ // this object will be ""parsed"" into an Event Object
                //    title: 'The Title', // a property!
                //    start: '2020-07-16T10:30:00',
                //}
            ]
        });
        calendar.render();
    });

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
